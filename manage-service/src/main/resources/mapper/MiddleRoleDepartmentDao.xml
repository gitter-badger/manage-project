<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.quick.spring.boot.manage.dao.mapper.MiddleRoleDepartmentDao">
	<resultMap type="com.github.quick.spring.boot.manage.dao.entity.MiddleRoleDepartment" id="MiddleRoleDepartmentMap">
		<result property="id" column="id" jdbcType="INTEGER"/>
		<result property="roleId" column="role_id" jdbcType="INTEGER"/>
		<result property="departmentId" column="department_id" jdbcType="INTEGER"/>
	</resultMap>

	<!--查询单个-->
	<select id="queryById" resultMap="MiddleRoleDepartmentMap">

				select
				  id, role_id, department_id
				from manager.middle_role_department
				where id = #{id}

	</select>

	<!--查询指定行数据-->
	<select id="queryAllByLimit" resultMap="MiddleRoleDepartmentMap">

				select
				  id, role_id, department_id
				from manager.middle_role_department
				limit #{offset}, #{limit}

	</select>

	<!--通过实体作为筛选条件查询-->
	<select id="queryAll" resultMap="MiddleRoleDepartmentMap">
		select
		id, role_id, department_id
		from manager.middle_role_department
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="roleId != null">
				and role_id = #{roleId}
			</if>
			<if test="departmentId != null">
				and department_id = #{departmentId}
			</if>
		</where>
	</select>

	<!--新增所有列-->
	<insert id="insert" keyProperty="id" useGeneratedKeys="true">

				insert into manager.middle_role_department(role_id, department_id)
				values (#{roleId}, #{departmentId})

	</insert>

	<insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
		insert into manager.middle_role_department(role_id, department_id)
		values
		<foreach collection="entities" item="entity" separator=",">
			(#{entity.roleId}, #{entity.departmentId})
		</foreach>
	</insert>

	<insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
		insert into manager.middle_role_department(role_id, department_id)
		values
		<foreach collection="entities" item="entity" separator=",">
			(#{entity.roleId}, #{entity.departmentId})
		</foreach>
		on duplicate key update
		role_id = values(role_id) , department_id = values(department_id)
	</insert>

	<!--通过主键修改数据-->
	<update id="update">
		update manager.middle_role_department
		<set>
			<if test="roleId != null">
				role_id = #{roleId},
			</if>
			<if test="departmentId != null">
				department_id = #{departmentId},
			</if>
		</set>
		where id = #{id}
	</update>

	<!--通过主键删除-->
	<delete id="deleteById">

				delete from manager.middle_role_department where id = #{id}

	</delete>
</mapper>